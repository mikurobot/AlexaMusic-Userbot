# code by Asad Ali Owner Off Jankari Ki Duniya Youtube Channel


import os
import sys
import asyncio
from pyrogram import Client
from pyrogram import filters
from pyrogram.types import Message
from config import bot, call_py, HNDLR, contact_filter
from time import time
from datetime import datetime

# System Uptime
START_TIME = datetime.utcnow()
TIME_DURATION_UNITS = (
    ("Week", 60 * 60 * 24 * 7),
    ("Day", 60 * 60 * 24),
    ("Hour", 60 * 60),
    ("Min", 60),
    ("Sec", 1),
)


async def _human_time_duration(seconds):
    if seconds == 0:
        return "inf"
    parts = []
    for unit, div in TIME_DURATION_UNITS:
        amount, seconds = divmod(int(seconds), div)
        if amount > 0:
            parts.append("{} {}{}".format(amount, unit, "" if amount == 1 else "s"))
    return ", ".join(parts)


@Client.on_message(contact_filter & filters.command(["ping"], prefixes=f"{HNDLR}"))
async def ping(client, m: Message):
    start = time()
    current_time = datetime.utcnow()
    m_reply = await m.reply_text("`...`")
    delta_ping = time() - start
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))
    await m_reply.edit(f"`{delta_ping * 1000:.3f} ms` \n**puunkUptime üèì** - `{uptime}`")


@Client.on_message(contact_filter & filters.command(["restart"], prefixes=f"{HNDLR}"))
async def restart(client, m: Message):
    await m.reply("`Restarting...`")
    os.execl(sys.executable, sys.executable, *sys.argv)
    # You probably don't need it but whatever
    quit()


@Client.on_message(contact_filter & filters.command(["help"], prefixes=f"{HNDLR}"))
async def help(client, m: Message):
    HELP = f"**üõ†  ú·¥á ü·¥ò ·¥ç·¥á…¥·¥ú üõ†** \n\n**·¥Ä…¥ è·¥è…¥·¥á ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös …™“ì …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥è·¥Ö·¥á s·¥á·¥õ ·¥õ·¥è ·¥õ Ä·¥ú·¥á**\n**·¥õ·¥è ·¥ò ü·¥Ä è ·¥Ä·¥ú·¥Ö…™·¥è s·¥è…¥…¢** {HNDLR}play\n** ·¥õ·¥è ·¥ò ü·¥Ä è ·¥†…™·¥Ö·¥á·¥è s·¥è…¥…¢** {HNDLR}vplay\n**“ì·¥è Ä  Ä·¥Ä·¥Ö…™·¥è  ü…™·¥†·¥á s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢** {HNDLR}stream (**“ì·¥è Ä  Ä·¥Ö…™·¥è  ü…™…¥·¥ãs**) \n**“ì·¥è Ä  ü…™·¥†·¥á  ü…™…¥·¥ãs** {HNDLR}vstream (“ì·¥è Ä .m3u8 /  ü…™·¥†·¥á  ü…™…¥·¥ãs) \n\n**SUDO SOMMANDS** (** è·¥è·¥ú ·¥Ñ·¥Ä…¥  Ä·¥ú…¥ ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös …™“ì  è·¥è·¥ú ·¥Ä Ä·¥á …™…¥ ·¥ç è ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ  ü…™s·¥õ ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ·¥è ·¥ç è ·¥è·¥°…¥·¥á Ä** @xieos **“ì·¥è Ä  ô·¥á·¥Ñ·¥è·¥ç…™…¥…¢ s·¥ú·¥Ö·¥è**): \n**“ì·¥è Ä …¢·¥á·¥õ·¥õ…™…¥…¢ ·¥ò…™…¥…¢** {HNDLR}ping \n**s·¥ã…™·¥ò ·¥õ ú·¥á s·¥è…¥…¢** {HNDLR}skip \n**·¥õ·¥è ·¥ò·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ s·¥è…¥…¢** {HNDLR}pause ·¥Ä…¥·¥Ö **·¥õ·¥è  Ä·¥ás·¥ú·¥ç·¥á ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ s·¥è…¥…¢ **{HNDLR}resume \n**·¥õ·¥è s·¥õ·¥è·¥ò ·¥õ ú·¥á s·¥è…¥…¢** {HNDLR}stop / **·¥õ·¥è ·¥á…¥·¥Ö ·¥õ·¥è s·¥è…¥…¢** {HNDLR}end \n**“ì·¥è Ä  ú·¥á ü·¥ò ·¥ç·¥á…¥·¥ú** {HNDLR}help \n**·¥õ·¥è …¢·¥á·¥õ  Ä·¥á·¥ò·¥è** {HNDLR}repo \n**·¥õ·¥è  Ä·¥ás·¥õ·¥Ä Ä·¥õ  ô·¥è·¥õ** {HNDLR}restart"
    await m.reply(HELP)


@Client.on_message(contact_filter & filters.command(["repo"], prefixes=f"{HNDLR}"))
async def repo(client, m: Message):
    REPO = f"**üõ† IF YOU WANT REPO üõ†** \n\n**·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ·¥è ·¥ç è** [·¥è…¥·¥°·¥á Ä](t.me/xieos)\n**…™“ì  è·¥è·¥ú  ü…™·¥ã·¥á ·¥ç è ·¥ò Ä·¥è·¥ä·¥á·¥Ñ·¥õ ·¥õ ú·¥á …¢…™·¥†·¥á ·¥ç·¥á  ú·¥á·¥Ä Ä·¥õ ·¥Ä…¥·¥Ö ·¥ä·¥è…™…¥** [·¥ä·¥è…™…¥](t.me/info_groups)"
    await m.reply(REPO)
